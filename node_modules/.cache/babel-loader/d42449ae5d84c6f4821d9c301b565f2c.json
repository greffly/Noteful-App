{"ast":null,"code":"import _toConsumableArray from \"/Users/hippobu/Projects/Noteful Final/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/hippobu/Projects/Noteful Final/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hippobu/Projects/Noteful Final/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hippobu/Projects/Noteful Final/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hippobu/Projects/Noteful Final/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hippobu/Projects/Noteful Final/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hippobu/Projects/Noteful Final/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport dummyStore from '../dummy-store';\nimport { getNotesForFolder, findNote, findFolder } from '../notes-helpers';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      notes: [],\n      folders: []\n    };\n\n    _this.addFolder = function (folderName) {\n      // update the state's folders array by adding foldername to it.\n      _this.setState({\n        folders: _toConsumableArray(_this.state.folders).concat([folderName])\n      });\n    };\n\n    _this.addNote = function (note) {\n      // update the state's notes array by adding foldername to it.\n      _this.setState({\n        noteName: _toConsumableArray(_this.state.notes).concat([noteName])\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // fake date loading from API call\n      setTimeout(function () {\n        return _this2.setState(dummyStore);\n      }, 600);\n    }\n  }, {\n    key: \"renderNavRoutes\",\n    value: function renderNavRoutes() {\n      var _this$state = this.state,\n          notes = _this$state.notes,\n          folders = _this$state.folders;\n      return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(function (path) {\n        return React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          render: function render(routeProps) {\n            return React.createElement(NoteListNav, Object.assign({\n              folders: folders,\n              notes: notes\n            }, routeProps, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/note/:noteId\",\n        render: function render(routeProps) {\n          var noteId = routeProps.match.params.noteId;\n          var note = findNote(notes, noteId) || {};\n          var folder = findFolder(folders, note.folderId);\n          return React.createElement(NotePageNav, Object.assign({}, routeProps, {\n            folder: folder,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderMainRoutes\",\n    value: function renderMainRoutes() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          notes = _this$state2.notes,\n          folders = _this$state2.folders;\n      return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(function (path) {\n        return React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          render: function render(routeProps) {\n            var folderId = routeProps.match.params.folderId;\n            var notesForFolder = getNotesForFolder(notes, folderId);\n            return React.createElement(NoteListMain, Object.assign({}, routeProps, {\n              notes: notesForFolder,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/note/:noteId\",\n        render: function render(routeProps) {\n          var noteId = routeProps.match.params.noteId;\n          var note = findNote(notes, noteId);\n          return React.createElement(NotePageMain, Object.assign({}, routeProps, {\n            note: note,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-folder\",\n        render: function render(routeProps) {\n          return React.createElement(AddFolder, Object.assign({\n            addFolder: _this3.addFolder\n          }, routeProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-note\",\n        render: function render(routeProps) {\n          return React.createElement(AddNote, Object.assign({\n            addNote: _this3.addNote\n          }, routeProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"App__nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.renderNavRoutes()), React.createElement(\"header\", {\n        className: \"App__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Noteful\"), \" \", React.createElement(FontAwesomeIcon, {\n        icon: \"check-double\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }))), React.createElement(\"main\", {\n        className: \"App__main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.renderMainRoutes()));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/hippobu/Projects/Noteful Final/src/App/App.js"],"names":["React","Component","Route","Link","FontAwesomeIcon","NoteListNav","NotePageNav","NoteListMain","NotePageMain","AddFolder","AddNote","dummyStore","getNotesForFolder","findNote","findFolder","App","state","notes","folders","addFolder","folderName","setState","addNote","note","noteName","setTimeout","map","path","routeProps","noteId","match","params","folder","folderId","notesForFolder","renderNavRoutes","renderMainRoutes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport dummyStore from '../dummy-store';\nimport { getNotesForFolder, findNote, findFolder } from '../notes-helpers';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: []\n  };\n\n  componentDidMount() {\n    // fake date loading from API call\n    setTimeout(() => this.setState(dummyStore), 600);\n  }\n\n  addFolder = folderName => {\n    // update the state's folders array by adding foldername to it.\n    this.setState({\n      folders: [...this.state.folders, folderName]\n    });\n  };\n  addNote = note => {\n    // update the state's notes array by adding foldername to it.\n    this.setState({\n      noteName: [...this.state.notes, noteName]\n    });\n  };\n\n  renderNavRoutes() {\n    const { notes, folders } = this.state;\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path => (\n          <Route\n            exact\n            key={path}\n            path={path}\n            render={routeProps => (\n              <NoteListNav folders={folders} notes={notes} {...routeProps} />\n            )}\n          />\n        ))}\n        <Route\n          path='/note/:noteId'\n          render={routeProps => {\n            const { noteId } = routeProps.match.params;\n            const note = findNote(notes, noteId) || {};\n            const folder = findFolder(folders, note.folderId);\n            return <NotePageNav {...routeProps} folder={folder} />;\n          }}\n        />\n      </>\n    );\n  }\n\n  renderMainRoutes() {\n    const { notes, folders } = this.state;\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path => (\n          <Route\n            exact\n            key={path}\n            path={path}\n            render={routeProps => {\n              const { folderId } = routeProps.match.params;\n              const notesForFolder = getNotesForFolder(notes, folderId);\n              return <NoteListMain {...routeProps} notes={notesForFolder} />;\n            }}\n          />\n        ))}\n        <Route\n          path='/note/:noteId'\n          render={routeProps => {\n            const { noteId } = routeProps.match.params;\n            const note = findNote(notes, noteId);\n            return <NotePageMain {...routeProps} note={note} />;\n          }}\n        />\n        <Route\n          path='/add-folder'\n          render={routeProps => (\n            <AddFolder addFolder={this.addFolder} {...routeProps} />\n          )}\n        />\n        <Route\n          path='/add-note'\n          render={routeProps => (\n            <AddNote addNote={this.addNote} {...routeProps} />\n          )}\n        />\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <nav className='App__nav'>{this.renderNavRoutes()}</nav>\n        <header className='App__header'>\n          <h1>\n            <Link to='/'>Noteful</Link> <FontAwesomeIcon icon='check-double' />\n          </h1>\n        </header>\n        <main className='App__main'>{this.renderMainRoutes()}</main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}