{"ast":null,"code":"import _classCallCheck from \"/Users/hippobu/Projects/Noteful Final/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hippobu/Projects/Noteful Final/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hippobu/Projects/Noteful Final/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hippobu/Projects/Noteful Final/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hippobu/Projects/Noteful Final/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hippobu/Projects/Noteful Final/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport dummyStore from '../dummy-store';\nimport { getNotesForFolder, findNote, findFolder } from '../notes-helpers';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      notes: [],\n      folders: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // fake date loading from API call\n      setTimeout(function () {\n        return _this2.setState(dummyStore);\n      }, 600);\n    }\n  }, {\n    key: \"renderNavRoutes\",\n    value: function renderNavRoutes() {\n      var _this$state = this.state,\n          notes = _this$state.notes,\n          folders = _this$state.folders;\n      return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(function (path) {\n        return React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          render: function render(routeProps) {\n            return React.createElement(NoteListNav, Object.assign({\n              folders: folders,\n              notes: notes\n            }, routeProps, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/note/:noteId\",\n        render: function render(routeProps) {\n          var noteId = routeProps.match.params.noteId;\n          var note = findNote(notes, noteId) || {};\n          var folder = findFolder(folders, note.folderId);\n          return React.createElement(NotePageNav, Object.assign({}, routeProps, {\n            folder: folder,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-folder\",\n        component: NotePageNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-note\",\n        component: NotePageNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderMainRoutes\",\n    value: function renderMainRoutes() {\n      var _this$state2 = this.state,\n          notes = _this$state2.notes,\n          folders = _this$state2.folders;\n      return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(function (path) {\n        return React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          render: function render(routeProps) {\n            var folderId = routeProps.match.params.folderId;\n            var notesForFolder = getNotesForFolder(notes, folderId);\n            return React.createElement(NoteListMain, Object.assign({}, routeProps, {\n              notes: notesForFolder,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/note/:noteId\",\n        render: function render(routeProps) {\n          var noteId = routeProps.match.params.noteId;\n          var note = findNote(notes, noteId);\n          return React.createElement(NotePageMain, Object.assign({}, routeProps, {\n            note: note,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-folder\",\n        component: AddFolder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-note\",\n        component: AddNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"App__nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.renderNavRoutes()), React.createElement(\"header\", {\n        className: \"App__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Noteful\"), \" \", React.createElement(FontAwesomeIcon, {\n        icon: \"check-double\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))), React.createElement(\"main\", {\n        className: \"App__main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.renderMainRoutes()));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/hippobu/Projects/Noteful Final/src/App/App.js"],"names":["React","Component","Route","Link","FontAwesomeIcon","NoteListNav","NotePageNav","NoteListMain","NotePageMain","AddFolder","AddNote","dummyStore","getNotesForFolder","findNote","findFolder","App","state","notes","folders","setTimeout","setState","map","path","routeProps","noteId","match","params","note","folder","folderId","notesForFolder","renderNavRoutes","renderMainRoutes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport dummyStore from '../dummy-store';\nimport { getNotesForFolder, findNote, findFolder } from '../notes-helpers';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: []\n  };\n\n  componentDidMount() {\n    // fake date loading from API call\n    setTimeout(() => this.setState(dummyStore), 600);\n  }\n\n  renderNavRoutes() {\n    const { notes, folders } = this.state;\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path => (\n          <Route\n            exact\n            key={path}\n            path={path}\n            render={routeProps => (\n              <NoteListNav folders={folders} notes={notes} {...routeProps} />\n            )}\n          />\n        ))}\n        <Route\n          path='/note/:noteId'\n          render={routeProps => {\n            const { noteId } = routeProps.match.params;\n            const note = findNote(notes, noteId) || {};\n            const folder = findFolder(folders, note.folderId);\n            return <NotePageNav {...routeProps} folder={folder} />;\n          }}\n        />\n        <Route path='/add-folder' component={NotePageNav} />\n        <Route path='/add-note' component={NotePageNav} />\n      </>\n    );\n  }\n\n  renderMainRoutes() {\n    const { notes, folders } = this.state;\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path => (\n          <Route\n            exact\n            key={path}\n            path={path}\n            render={routeProps => {\n              const { folderId } = routeProps.match.params;\n              const notesForFolder = getNotesForFolder(notes, folderId);\n              return <NoteListMain {...routeProps} notes={notesForFolder} />;\n            }}\n          />\n        ))}\n        <Route\n          path='/note/:noteId'\n          render={routeProps => {\n            const { noteId } = routeProps.match.params;\n            const note = findNote(notes, noteId);\n            return <NotePageMain {...routeProps} note={note} />;\n          }}\n        />\n        <Route path='/add-folder' component={AddFolder} />\n        <Route path='/add-note' component={AddNote} />\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <nav className='App__nav'>{this.renderNavRoutes()}</nav>\n        <header className='App__header'>\n          <h1>\n            <Link to='/'>Noteful</Link> <FontAwesomeIcon icon='check-double' />\n          </h1>\n        </header>\n        <main className='App__main'>{this.renderMainRoutes()}</main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}